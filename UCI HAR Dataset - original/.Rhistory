yp<-(2*yp-min(yp)-max(yp))/(max(yp)-min(yp))
zp<-(2*zp-min(zp)-max(zp))/(max(zp)-min(zp))
i<-8
a<-1+twoell*i
xp1<-c( xp[ (a+twoell-1):(a+ell) ], xp[ a:(a+ell-1) ] )
yp1<-c( yp[ (a+twoell-1):(a+ell) ], yp[ a:(a+ell-1) ] )
zp1<-c( zp[ (a+twoell-1):(a+ell) ], zp[ a:(a+ell-1) ] )
plot3d(xp1,yp1,zp1,aspect=c(1.2,1,0.65),box=FALSE,axes=FALSE,xlab="",ylab="",zlab="",type="l",xlim=c(-1,1),ylim=c(-1,1),zlim=c(-1,1))
for (i in 0:7) {
a<-1+twoell*i
xp1<-c( xp[ (a+twoell-1):(a+ell) ], xp[ a:(a+ell-1) ] )
yp1<-c( yp[ (a+twoell-1):(a+ell) ], yp[ a:(a+ell-1) ] )
zp1<-c( zp[ (a+twoell-1):(a+ell) ], zp[ a:(a+ell-1) ] )
plot3d(xp1,yp1,zp1,aspect=c(1.2,1,0.65),type="l",add=TRUE)
}
M<-matrix(c(
0.84242517,  0.5231988, -0.1287744,    0,
-0.09143636,  0.3743461,  0.9227700,    0,
0.53099817, -0.7655900,  0.3631980,    0,
0,  0,  0,  1),4,4,byrow=TRUE)
par3d(FOV=170)
par3d(userMatrix=M)
par3d(zoom=0.18)
# rgl.postscript("3dlogoMod.svg", fmt="svg", drawText=FALSE )
# Bottom left
x1<-xp[seq(from=1,by=twoell,length=18)]
y1<-yp[seq(from=1,by=twoell,length=18)]
z1<-zp[seq(from=1,by=twoell,length=18)]
# plot3d(x1,y1,z1,aspect=c(1.2,1,0.65),type="p",add=TRUE)
# Bottom right
x2<-xp[seq(from=ell,by=twoell,length=18)]
y2<-yp[seq(from=ell,by=twoell,length=18)]
z2<-zp[seq(from=ell,by=twoell,length=18)]
# plot3d(x2,y2,z2,aspect=c(1.2,1,0.65),type="p",add=TRUE)
# Top left
x3<-xp[seq(from=ell+1,by=twoell,length=18)]
y3<-yp[seq(from=ell+1,by=twoell,length=18)]
z3<-zp[seq(from=ell+1,by=twoell,length=18)]
# plot3d(x3,y3,z3,aspect=c(1.2,1,0.65),type="p",add=TRUE)
# Top right
x4<-xp[seq(from=twoell,by=twoell,length=18)]
y4<-yp[seq(from=twoell,by=twoell,length=18)]
z4<-zp[seq(from=twoell,by=twoell,length=18)]
# plot3d(x4,y4,z4,aspect=c(1.2,1,0.65),type="p",add=TRUE)
for( i in (1:8) ) plot3d(c(x4[i],x2[i+1]),c(y4[i],y2[i+1]),c(z4[i],z2[i+1]),aspect=c(1.2,1,0.65),type="l",add=TRUE)
plot3d(c(x2[1],x2[1]+0.01),c(y2[1],y2[1]),c(z2[1],z2[1]),aspect=c(1.2,1,0.65),type="l",add=TRUE)
plot3d(c(x4[9],x4[9]+0.01),c(y4[9],y4[9]),c(z4[9],z2[9]),aspect=c(1.2,1,0.65),type="l",add=TRUE)
plot3d(c(x2[1]+0.01,x4[9]+0.01),c(y2[1],y4[9]),c(z2[1],z4[9]),aspect=c(1.2,1,0.65),type="l",add=TRUE)
rgl.postscript("3dlogoMod.svg", fmt="svg", drawText=FALSE )
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
head(Month)
Month
head(airquality)
summary(airquality)
airquality = transform(airquality, Month = factor(Month))
head(airquality)
summary(airquality)
str(airquality)
?transform()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
?aes()
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages(c("bayesm", "BH", "chron", "crayon", "curl", "devtools", "dplyr", "Formula", "gridExtra", "Hmisc", "httr", "jsonlite", "KernSmooth", "manipulate", "plyr", "R6", "Rcpp", "RCurl", "rgl", "rmarkdown", "RMySQL", "robustbase", "rstudioapi", "rversions", "scales", "stringi", "stringr", "testthat", "TTR", "XML", "zoo"))
install.packages('RWordPress')
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_bu()
?group_by()
?group_by
by_package(cran, package)
by_package<-group_by(cran, package)
by_package
summarize(by_package, mean(size))
source('C:/Users/DAHIAN~1/AppData/Local/Temp/RtmpsLGyzh/summarize1.R')
source('C:/Users/DAHIAN~1/AppData/Local/Temp/RtmpsLGyzh/summarize1.R')
reset()
reset()
reset()
reset()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unqiue > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
exit()
bye()
setwd("H:/selflearn/Coursera/3 - Getting and Cleaning Data/project")
setwd("./data/UCI HAR Dataset")
library(c(dplyr, tidyr))
library(dplyr, tidyr)
train <- read.table("./train/X_train.txt")
train_subject <- read.table("./train/subject_train.txt", col.names = "subject")
train_activity <- read.table("./train/y_train.txt", col.names = "activity")
test <- read.table("./test/X_test.txt")
test_subject <- read.table("./test/subject_test.txt", col.names = "subject")
test_activity <- read.table("./test/y_test.txt", col.names = "activity")
train_df <- tbl_df(train) %>%
bind_cols(train_subject, train_activity)
test_df <- tbl_df(test) %>%
bind_cols(test_subject, test_activity)
combined_df <- bind_rows(train_df, test_df) %>%
select(subject, activity, V1:V561) %>%
mutate(activity = replace(activity, activity == 1, "Walking")) %>%
mutate(activity = replace(activity, activity == 2, "Walking_Upstairs")) %>%
mutate(activity = replace(activity, activity == 3, "Walking_Downstairs")) %>%
mutate(activity = replace(activity, activity == 4, "Sitting")) %>%
mutate(activity = replace(activity, activity == 5, "Standing")) %>%
mutate(activity = replace(activity, activity == 6, "Laying"))
feat_col_names <- read.table("features.txt")
colnames(combined_df)[3:563] <- as.vector(feat_col_names[, 2])
head(combined_df)
std_mean_df <- combined_df %>%
select(subject, activity, matches("mean | std"))
std_mean_df <- combined_df %>%
select(subject, activity)
std_mean_df <- combined_df
select(std_mean_df, subject, activity)
std_mean_df <- combined_df %>%
select(subject, activity, contains("mean"))
std_mean_df <- combined_df %>%
select(subject, activity, contains("mean"), -(3:563))
std_mean_df <- combined_df %>%
select(subject)
colnames(combined_df)
rm(combined_df)
rm(std_mean_df)
rm(combined_df)
rm(std_mean_df)
combined_df <- bind_rows(train_df, test_df) %>%
select(subject, activity, V1:V561) %>%
mutate(activity = replace(activity, activity == 1, "Walking")) %>%
mutate(activity = replace(activity, activity == 2, "Walking_Upstairs")) %>%
mutate(activity = replace(activity, activity == 3, "Walking_Downstairs")) %>%
mutate(activity = replace(activity, activity == 4, "Sitting")) %>%
mutate(activity = replace(activity, activity == 5, "Standing")) %>%
mutate(activity = replace(activity, activity == 6, "Laying"))
feat_col_names <- read.table("features.txt")
colnames(combined_df)[3:563] <- as.vector(feat_col_names[, 2])
std_mean_df <- combined_df %>%
select(subject)
select(combined_df, subject)
this <- select(.data = combined_df, ... = subject)
this <- select(combined_df, subject, -(2:653))
samp1 <- c(1, 2, 3, 4, 5, 5)
duplicated(samp1)
!duplicated(samp1)
combined_df[,479] == combined_df[, 493]
all.equal(combined_df[,479] == combined_df[, 493])
all.equal(combined_df[,479], combined_df[, 493])
colnames(combined_df[,479]) == colnames(combined_df[, 493])
duplicated(combined_df)
sum(duplicated(combined_df))
rm(combined_df)
rm(std_mean_df)
combined_df <- bind_rows(train_df, test_df) %>%
select(subject, activity, V1:V561) %>%
mutate(activity = replace(activity, activity == 1, "Walking")) %>%
mutate(activity = replace(activity, activity == 2, "Walking_Upstairs")) %>%
mutate(activity = replace(activity, activity == 3, "Walking_Downstairs")) %>%
mutate(activity = replace(activity, activity == 4, "Sitting")) %>%
mutate(activity = replace(activity, activity == 5, "Standing")) %>%
mutate(activity = replace(activity, activity == 6, "Laying"))
feat_col_names <- read.table("features.txt")
colnames(combined_df)[3:563] <- as.vector(feat_col_names[, 2])
std_mean_df <- combined_df %>%
select(matches("mean | std"))
make.unique(c("a", "a", "a"))
make.names(c("a", "a", "a"))
make.names(c("a", "a", "a"), unique=TRUE)
feat_col_names <- read.table("features.txt")
feat_col_names_unique <- make.unique(feat_col_names[, 2])
feat_col_names_unique <- make.unique(as.vector(feat_col_names[, 2]))
feat_col_names_unique
colnames(combined_df)[3:563] <- feat_col_names_unique
std_mean_df <- combined_df %>%
select(subject, activity, matches("mean | std"))
head(std_mean_df)
colnames(std_mean_df)
rm(std_mean_df)
std_mean_df <- combined_df %>%
select(subject, activity, matches("mean|std"))
head(std_mean_df)
rm(std_mean_df)
subset_mean_sd_df <- combined_df %>%
select(subject, activity, matches("mean|std"))
averages_df <- subset_mean_sd_df %>%
group_by(subject, activity) %>%
summarize(mean())
averages_df <- subset_mean_sd_df %>%
group_by(subject, activity) %>%
summarize(colnames(averages_df[,3]:colnames(averages_df[,653])) = mean(colnames(averages_df[,3]:colnames(averages_df[,653])))
colnames(subset_mean_sd_df[,3])
colnames(subset_mean_sd_df)[3]
averages_df <- subset_mean_sd_df %>%
group_by(subject, activity) %>%
for feat in colnames(subset_mean_sd_df)[3]:colnames(subset_mean_sd_df)[653] {
summarize(feat = mean(feat))}
averages_df <- subset_mean_sd_df %>%
group_by(subject, activity)
rm(averages_df)
rm(subset_mean_sd_df)
subset_mean_std_df <- combined_df %>%
select(subject, activity, matches("mean|std"))
average_df2 <- subset_mean_std_df %>%
aggregate(by = list(subject, activity), mean)
average_df2 <- subset_mean_std_df %>%
aggregate(by = list(average_df2$subject, averag_df2$activity), FUN = "mean")
average_df2 <- aggregate(subset_mean_std_df, by = list(subject, activity), FUN = "mean")
average_df2 <- aggregate(subset_mean_std_df, by = list(subset_mean_std_df$subject, subset_mean_std_df$activity), FUN = "mean")
warnings()
dim(subset_mean_std_df)
colnames(average_df2)
head(average_df2)
anyNa(subset_mean_std_df[,2])
anyNA(subset_mean_std_df[,2])
averages_df2 <- aggregate(subset_mean_std_df[3:653,], by = list(subset_mean_std_df$subject, subset_mean_std_df$activity), FUN = "mean")
averages_df2 <- aggregate(subset_mean_std_df[,3:653], by = list(subset_mean_std_df$subject, subset_mean_std_df$activity), FUN = "mean")
averages_df3 <- subset_mean_std_df[,3:653]
averages_df3 <- aggregate(averages_df3, by = list(subset_mean_std_df$subject, subset_mean_std_df$activity), FUN = "mean")
averages_df1 <- subset_mean_std_df %>%
group_by(subject, activity)
# for feat in colnames(subset_mean_sd_df)[3]:colnames(subset_mean_sd_df)[653] {
summarize(feat = mean(3))
averages_df1 <- subset_mean_std_df %>%
group_by(subject, activity) %>%
# for feat in colnames(subset_mean_sd_df)[3]:colnames(subset_mean_sd_df)[653] {
summarize(feat = mean(3))
head(averages_df1)
head(averages_df1, 10)
averages_df1 <- subset_mean_std_df %>%
group_by(subject, activity) %>%
# for feat in colnames(subset_mean_sd_df)[3]:colnames(subset_mean_sd_df)[653] {
summarize(for feat in colnames(subset_mean_sd_df)[3]:colnames(subset_mean_sd_df)[653] {feat = mean(feat)})
averages_df2 <- aggregate(subset_mean_std_df, by = list(subset_mean_std_df$subject, subset_mean_std_df$activity), FUN = "mean")
averages_df2 <- aggregate(subset_mean_std_df[, 3:653], by = list(c(subset_mean_std_df$subject, subset_mean_std_df$activity)), FUN = "mean")
averages_df3 <- aggregate(subset_mean_std_df, by = list(subset_mean_std_df$subject, subset_mean_std_df$activity), FUN = "mean", na.rm = TRUE)
head(averages_df3)
averages_df2 <- subset_mean_std_df %>%
group_by(subject, activity) %>%
for (feat in colnames(subset_mean_sd_df)[3]:colnames(subset_mean_sd_df)[653]) {
summarize(feat = mean(feat))
}
averages_df1B <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarize(colnames(subset_mean_std_df) = mean(subset_mean_std_df))
averages_df1B <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarize(mean(subset_mean_std_df))
head(averages_df1B)
dim(averages_df1B)
averages_df1B <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarize(mean(subset_mean_std_df[3:563]))
head(averages_df1B)
dim(averages_df1B)
averages_df1B <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarize(mean(subset_mean_std_df[,3:563]))
head(averages_df1B)
dim(averages_df1B)
averages_df4 <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarise_each(mean)
averages_df4 <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarise_each(funs(mean))
dim(subset_mean_std_df)
head(averages_df4)
head(averages_df4, 10)
rm(average_df2, averages_df1)
rm(averages_df2, averages_df1B)
rm(averages_df3)
rm(averages_df4)
averages_df <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarise_each(funs(mean))
avg_col_names_func <- function(x) {
for (i in x) {
i <- paste("AVG", i, sep="_")
}
}
avg_col_names <- avg_col_names_func(colnames(averages_df)[3:653])
avg_col_names
avg_col_names <- sapply(colnames(averages_df)[3:653], function(x) {paste("AVG", x, sep="_")})
head(avg_col_names)
rm(avg_col_names_func())
rm(avg_col_names_func
)
rm(samp1)
as.vector(avg_col_names)
y <- c(1, 3, 5, 3)
y[2:]
y[2::]
y[2:length(y)]
avg_col_names <- sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})
", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
avg_col_names <- as.vector(c("sample", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
avg_col_names
avg_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
rm(y)
colnames(averages_df) <- avg_col_names
head(avg_col_names)
head(averages_df)
dim(averages_df)
averages_df <- subset_mean_std_df %>%
group_by(activity, subject) %>%
summarise_each(funs(mean))
avg_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
colnames(averages_df) <- avg_col_names
head(averages_df)
head(averages_df, 10)
head(averages_df, 20)
averages_df <- subset_mean_std_df %>%
group_by(subject, activity) %>%
summarise_each(funs(mean))
avg_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
colnames(averages_df) <- avg_col_names
head(averages_df, 20)
train_df2 <- bind_cols(train_subject, train_activity, train)
train_df == train_df2
train_df2 <- bind_cols(train,train_subject, train_activity)
train_df == train_df2
train <- read.table("./train/X_train.txt")
train_subject <- read.table("./train/subject_train.txt", col.names = "subject")
train_activity <- read.table("./train/y_train.txt", col.names = "activity")
train_df <- tbl_df(bind_cols(train_subject, train_activity, train))
# read in Test data into tables
test <- read.table("./test/X_test.txt")
test_subject <- read.table("./test/subject_test.txt", col.names = "subject")
test_activity <- read.table("./test/y_test.txt", col.names = "activity")
test_df <- tbl_df(bind_cols(test_subject, test_activity, test))
combined_df <- bind_rows(train_df, test_df) %>%
mutate(activity = replace(activity, activity == 1, "Walking")) %>%
mutate(activity = replace(activity, activity == 2, "Walking_Upstairs")) %>%
mutate(activity = replace(activity, activity == 3, "Walking_Downstairs")) %>%
mutate(activity = replace(activity, activity == 4, "Sitting")) %>%
mutate(activity = replace(activity, activity == 5, "Standing")) %>%
mutate(activity = replace(activity, activity == 6, "Laying"))
head(combined_df)
anyNA(averages_df)
feat_col_names <- read.table("features.txt")
feat_col_names_unique <- make.unique(as.vector(feat_col_names[, 2]))
feat_col_names_unique
setwd(".")
setwd("./")
setwd(".")
setwd("..")
setwd("...")
setwd("..")
setwd("data")
setwd("UCI HAR Dataset")
colnames(averages_df)
col_samp <- make.names(colnames(averages_df))
col_samp
averages_df_col_names <- gsub("...", ".", averages_df_col_names)
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- gsub("...", ".", averages_df_col_names)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names
averages_df_col_names <- gsub("...", ".", averages_df_col_names)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("...+[:alpha:]", ".", averages_df_col_names)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("\...", ".", averages_df_col_names)
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("..", ".", averages_df_col_names)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("..", "\.", averages_df_col_names)
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("A", ".", averages_df_col_names)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names
averages_df <- subset_mean_sd_df %>%
group_by(subject, activity) %>%
summarise_each(funs(mean))
# Create dataframes for the TRAIN subject, activity, and features variables. Then combine them in one dataframe.
train_subject <- read.table("./train/subject_train.txt", col.names = "subject")
train_activity <- read.table("./train/y_train.txt", col.names = "activity")
train_features <- read.table("./train/X_train.txt")
train_df <- tbl_df(bind_cols(train_subject, train_activity, train_features))
# Create dataframes for the TEST subject, activity, and features variables. Then combine them in one dataframe.
test_subject <- read.table("./test/subject_test.txt", col.names = "subject")
test_activity <- read.table("./test/y_test.txt", col.names = "activity")
test_features <- read.table("./test/X_test.txt")
test_df <- tbl_df(bind_cols(test_subject, test_activity, test_features))
#
combined_df <- bind_rows(train_df, test_df) %>%
mutate(activity = replace(activity, activity == 1, "Walking")) %>%
mutate(activity = replace(activity, activity == 2, "Walking_Upstairs")) %>%
mutate(activity = replace(activity, activity == 3, "Walking_Downstairs")) %>%
mutate(activity = replace(activity, activity == 4, "Sitting")) %>%
mutate(activity = replace(activity, activity == 5, "Standing")) %>%
mutate(activity = replace(activity, activity == 6, "Laying"))
# Features.txt contains the column names. Some of
## those names are duplicated. Make them unique.
feat_col_names <- read.table("features.txt")
feat_col_names_unique <- make.unique(as.vector(feat_col_names[, 2]))
colnames(combined_df)[3:563] <- feat_col_names_unique
subset_mean_sd_df <- combined_df %>%
select(subject, activity, matches("mean|std"))
averages_df <- subset_mean_sd_df %>%
group_by(subject, activity) %>%
summarise_each(funs(mean))
colnames(averages_df)
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
colnames(averages_df)
averages_df_col_names
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names
averages_df_col_names <- gsub("...", ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names
averages_df_col_names <- gsub(c("...", ".."), ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("... | ..", ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- gsub(c("...", ".."), ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names <- gsub(pattern = c("...", ".."), replacement = ".", x = averages_df_col_names, fixed = TRUE)
averages_df_col_names <- gsub(c("...", ".."), c(".", "."), averages_df_col_names, fixed = TRUE)
averages_df_col_names <- gsub("...|..", ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names
averages_df_col_names <- gsub("...", ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- gsub("..", ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- gsub(".$", '', averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- gsub("/.$/", '', averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- gsub(/.$/, '', averages_df_col_names, fixed = TRUE)
averages_df_col_names <- gsub("\\.$", '', averages_df_col_names, fixed = TRUE)
averages_df_col_names <- gsub(/.$/, '', averages_df_col_names, fixed = TRUE)
averages_df_col_names
averages_df_col_names <- gsub("\.$", '', averages_df_col_names)
averages_df_col_names <- gsub("\\.$", '', averages_df_col_names)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("\\.\\.\\.|\\.\\.|\\.$", ".", averages_df_col_names)
averages_df_col_names
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep="_")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names
averages_df_col_names <- gsub("\\.\\.\\.|\\.\\.", ".", averages_df_col_names)
averages_df_col_names
averages_df_col_names <- gsub("\\.$", '', averages_df_col_names)
averages_df_col_names
colnames(averages_df) <- averages_df_col_names
head(averages_df)
subset_mean_sd_df <- combined_df %>%
select(subject, activity, matches("mean|std"))
averages_df <- subset_mean_sd_df %>%
group_by(subject, activity) %>%
summarise_each(funs(mean))
averages_df_col_names <- as.vector(c("subject", "activity", sapply(colnames(averages_df)[3:ncol(averages_df)], function(x) {paste("AVG", x, sep=".")})))
averages_df_col_names <- make.names(averages_df_col_names)
averages_df_col_names <- gsub("...", ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names <- gsub("..", ".", averages_df_col_names, fixed = TRUE)
averages_df_col_names <- gsub("\\.$", '', averages_df_col_names)
averages_df_col_names
colnames(averages_df) <- averages_df_col_names
write.table(averages_df, "sd_mean_averages", row.names = FALSE)
write.table(averages_df, "sd_mean_averages.txt", row.names = FALSE)
this2<- read.table("sd_mean_averages.txt")
head(this2)
head(this2, heade= TRUE)
this2<- read.table("sd_mean_averages.txt", header= TRUE)
head(this2)
